version: "3"

services:
  # db:
  #   image: postgres:9.6.5
  #   environment:
  #     - POSTGRES_DB=flare
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres123882
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data/
  # Redis
  redis:
    image: redis:6.0.1-alpine
    restart: on-failure

  web:
    container_name: flare_web
    build:
      context: .
      dockerfile: ./flare_backend/Dockerfile
    command: >
      sh -c "python /code/manage.py collectstatic --no-input
      && python /code/manage.py makemigrations 
      && python /code/manage.py migrate  --noinput 
      && python /code/manage.py initadmin 
      && python /code/manage.py initsurvey 
      && python /code/manage.py initlang
      && python /code/manage.py initchannel
      && python /code/manage.py initconfig 
      && gunicorn flare.wsgi -b 0.0.0.0:8000"
    volumes:
      - ./flare_backend:/code
      - ./flare_backend/staticfiles/admin:/usr/share/nginx/html/static/admin
      - ./flare_backend/staticfiles/rest_framework:/usr/share/nginx/html/static/rest_framework
    ports:
      - "8000:8000"
    restart: on-failure

  # Celery worker
  celery_worker:
    container_name: flare_celery_worker
    build:
      context: .
      dockerfile: ./flare_backend/Dockerfile
    command: >
      sh -c "wait-for redis:6379 && wait-for web:8000
      && celery -A flare  worker -l info"
    volumes:
      - ./flare_backend:/code
    depends_on:
      - redis
      - web
    restart: on-failure
  # Celery worker
  celery_beat:
    container_name: flare_celery_beat
    build:
      context: .
      dockerfile: ./flare_backend/Dockerfile
    command: >
      sh -c "wait-for redis:6379 && wait-for web:8000
      && celery -A flare beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - ./flare_backend:/code
    depends_on:
      - redis
      - web
    restart: on-failure

  # ReactJS Frontend + Reverse Proxy for the web

  flare_nginx:
    container_name: flare_nginx
    build:
      context: .
      dockerfile: ./flare_frontend/Dockerfile
    ports:
      - "8999:8999"
    # environment:
    #   - VIRTUAL_HOST=ussd.covid19.et
    #   - VIRTUAL_PORT=8999
    #- LETSENCRYPT_HOST=ussd.covid19.et
    network_mode: "bridge"
    volumes:
      - ./flare_backend/staticfiles/admin:/usr/share/nginx/html/static/admin
      - ./flare_backend/staticfiles/rest_framework:/usr/share/nginx/html/static/rest_framework
    depends_on:
      - web
# volumes:
#   postgres_data:
